name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

defaults:
  run:
    working-directory: ./

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Run Linter
      run: npm run lint
    
    - name: Run Tests
      run: npm test -- --ci

  deploy:
    name: Deploy to Vercel
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'

    - name: Cache Next.js build
      uses: actions/cache@v3
      with:
        path: |
          .next/cache
          node_modules/.cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-

    - name: Install Dependencies
      run: npm ci --prefer-offline
      env:
        NODE_ENV: development

    - name: Build
      run: npm run build
      env:
        NODE_ENV: production
        NEXT_TELEMETRY_DISABLED: 1

    - name: Run Tests
      run: npm test

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: ./
      env:
        NODE_ENV: production
        NEXT_PUBLIC_VERCEL_ENV: production
